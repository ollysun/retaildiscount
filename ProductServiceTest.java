
// Generated by CodiumAI

import com.access.zenchallenge.services.ProductService;

import org.junit.Test;
import static org.junit.Assert.*;

public class ProductServiceTest {


    // Retrieve all products successfully
    @Test
    public void test_retrieve_all_products_successfully() {
        ProductRepository productRepository = mock(ProductRepository.class);
        ModelMapper modelMapper = new ModelMapper();
        ProductService productService = new ProductService(productRepository, modelMapper);

        List<Product> products = List.of(new Product(1L, "Product1", ProductCategory.CATEGORY1, 10.0),
                                         new Product(2L, "Product2", ProductCategory.CATEGORY2, 20.0));
        when(productRepository.findAll()).thenReturn(products);

        List<ProductDto> productDtos = productService.findAll();

        assertEquals(2, productDtos.size());
        assertEquals("Product1", productDtos.get(0).getName());
        assertEquals("Product2", productDtos.get(1).getName());
    }

    // Find a product by a non-existent ID
    @Test
    public void test_find_product_by_non_existent_id() {
        ProductRepository productRepository = mock(ProductRepository.class);
        ModelMapper modelMapper = new ModelMapper();
        ProductService productService = new ProductService(productRepository, modelMapper);

        when(productRepository.findById(1L)).thenReturn(Optional.empty());

        Optional<ProductDto> productDto = productService.findById(1L);

        assertTrue(productDto.isEmpty());
    }

}